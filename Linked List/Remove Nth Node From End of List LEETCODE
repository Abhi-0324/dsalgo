struct ListNode {
      int val;
      ListNode *next;
      ListNode() : val(0), next(nullptr) {}
      ListNode(int x) : val(x), next(nullptr) {}
      ListNode(int x, ListNode *next) : val(x), next(next) {}
  };
  class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* ptr=head;
        ListNode* start=ptr;
        int count=0;
        if(head==NULL || head->next==NULL)
        {
            return NULL;
        }
        
        while(head!=NULL)
        {
            head=head->next;
            count=count+1;
        }
        if(count==n)
        {
            start=start->next;
            return start;
        }
        int k= count-n-1;
        int m=0;
       
        while(m!=k )
        {
            m=m+1;
         ptr=ptr->next;
        }
        
        ptr->next=ptr->next->next;
        return start;
    }
};
